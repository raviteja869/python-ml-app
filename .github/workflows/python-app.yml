name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build
      run: |
        # Assuming you have a build script or process. If not, adjust accordingly.
        python setup.py build

    - name: Test
      run: |
        python -m unittest discover

    - name: Generate Code Coverage Report
      run: |
        # Assuming you're using coverage.py for code coverage
        coverage run -m unittest discover
        coverage report
        coverage xml

    - name: Upload Code Coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@v0.2.1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    - name: Configure Docker to use GCR
      run: |
        gcloud auth configure-docker

    - name: Build and Push Docker image to GCR
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/python-ml-app:${{ github.sha }} .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/python-ml-app:${{ github.sha }}

    - name: Deploy to GKE
      run: |
        gcloud container clusters get-credentials ${{ secrets.GCP_CLUSTER_NAME }} --zone ${{ secrets.GCP_CLUSTER_ZONE }}
        sed -i 's|gcr.io/python-regression-cicd-flow/python-ml-app:latest|gcr.io/${{ secrets.GCP_PROJECT_ID }}/python-ml-app:${{ github.sha }}|' deployment.yaml
        kubectl apply -f deployment.yaml
