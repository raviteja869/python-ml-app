name: CI/CD Pipeline

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build project
      run: python setup.py build > build.log

    - name: Upload build log
      uses: actions/upload-artifact@v2
      with:
        name: build-log
        path: build.log
  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests and generate coverage report
      run: |
        pip install pytest-cov
        pytest --cov=my_module --cov-report=xml > test.log

    - name: Upload test log and coverage report
      uses: actions/upload-artifact@v2
      with:
        name: test-outputs
        path: |
          test.log
          coverage.xml
  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: |
        docker build -t my-python-app .

    - name: Login to Google Cloud
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    - name: Push Docker image to Google Container Registry
      run: |
        docker tag my-python-app gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-python-app
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-python-app

